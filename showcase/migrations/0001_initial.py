# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-09-30 13:14
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('timezone', models.CharField(default='Europe/Moscow', max_length=50, verbose_name='User timezone')),
                ('confirmation_code', models.CharField(blank=True, max_length=128, null=True, verbose_name='User URL confirmation code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Market user',
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'Market users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_info', models.CharField(blank=True, max_length=400, null=True, verbose_name='notes on use')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Product created date')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Product last update date')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='currency name')),
                ('char_code', models.CharField(max_length=5, unique=True, verbose_name='currency char code')),
                ('int_code', models.IntegerField(unique=True, verbose_name='currency unique identifier')),
                ('usd_coeff', models.DecimalField(decimal_places=2, default=1, max_digits=12)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Product created date')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Product last update date')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Ingredient price')),
                ('name', models.CharField(max_length=400, verbose_name='Ingredient')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Product created date')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Product last update date')),
                ('name', models.CharField(max_length=400, unique=True, verbose_name='Product name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Product description')),
                ('is_published', models.BooleanField(default=False)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Product price')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.Currency')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Product created date')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Product last update date')),
                ('content', models.TextField(verbose_name='Review content')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='showcase.Product')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='Products',
            field=models.ManyToManyField(related_name='ings', through='showcase.Composition', to='showcase.Product'),
        ),
        migrations.AddField(
            model_name='composition',
            name='Product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.Product'),
        ),
        migrations.AddField(
            model_name='composition',
            name='ing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.Ingredient'),
        ),
    ]
